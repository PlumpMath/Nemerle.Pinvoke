using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows.Controls;
using System.Windows;
using System.Reflection;

namespace Nemerle.Pinvoke.CParser.Visualizer.Controls
{
    /// <summary>
    /// Bugs free TreeView control version, see 
    /// http://social.msdn.microsoft.com/Forums/en-US/wpf/thread/36aec363-9e33-45bd-81f0-1325a735cc45/#611fccf2-737f-4309-a793-4001488b23aa
    /// http://stackoverflow.com/questions/3868786/wpf-sentinel-objects-and-how-to-check-for-an-internal-type
    /// </summary>
    public class TreeViewWithoutSentinels : TreeView
    {
        protected override OnSelectedItemChanged(e: RoutedPropertyChangedEventArgs[object]) : void
        {
            unless (e.NewValue is FrameworkElement && 
                    (e.NewValue :> FrameworkElement).DataContext == DisconnectedItem)
                base.OnSelectedItemChanged(e);
        }

        private static DisconnectedItem = typeof(System.Windows.Data.BindingExpressionBase).
                GetField("DisconnectedItem", BindingFlags.Static | BindingFlags.NonPublic).
                GetValue(null);
    }
}
